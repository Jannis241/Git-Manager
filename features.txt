
Wichtig: 
eventuell einzelne Funktionen in neue files packen ->
funktionen die jetzt fertig sind und eigentlich nicht mehr verändert werden
müssen könenn ja in ein neues file

--------------------------------------------------

migrate: 
- gucken ob es schon ein git dir ist

create_repo:
- wo auf dem pc (path)
- public oder private
- name

open config:
- reset
- set username
- set api_key
- set project_path

oder ohne open config zu machen:
- config set username <name>
- config set api_key = <name>
- config set project_path = <path>

- für jeden command ein "help" command einbauen der die
möglichen befehle anzeigt, zb upload --help -> upload all, upload filename
---> das selbe auch wenn man einen invalid command macht wie einfach "upload"

upload:
- upload all --force
- upload xy --force
- commit message adden
- branch name (default ist main)
- zu der upload funktion muss path gegeben werden und nicht name
- gucken falls ein file nicht gefunden wird die groß und 
klein schreibung nur falsch ist -> input und name auf lowercase machen und dann vergleichen

update:
- update all --force
- update xy --force
- branch name (default ist main)
- zu der update funktion muss path gegeben werden und nicht name
- gucken falls ein file nicht gefunden wird die groß und 
klein schreibung nur falsch ist -> input und name auf lowercase machen und dann vergleichen

download:
- optionaler parameter path (wohin es geklont werden soll)

delete:
- delete folder from pc
- delete repo from acc
- delete branch -> you have to have opened a repo
- es muss bestätigt werden falls man etwas löschen will
also nochmal eine extra abfrage
- error info falls das repo nicht dem user gehört (config file checken)


create repo:
- name als parameter
- path als optionaler parameter (default ist project folder)
- schauen ob es das repo schon gibt auf github
- valid name checken
- repo dann erstellen und direkt clonen
- den path nochmal printen


Generell:
-command info checken -> default / file State
- vorschläge wenn man ein file falsch schreibt 
- auto completion für befehle
- pull push combi (add, commit, pull --rebase, push)
- git add, commit funktionen adden
- branch merge feature
- switch branch feature


upload all und update all test
alle git funktionen richtige print statements einbauen und alle testen